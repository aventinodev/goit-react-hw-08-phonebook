{"version":3,"file":"static/js/584.c5010e68.chunk.js","mappings":"uKACA,MAAsB,oB,UCQtB,EAPe,SAAC,GAAmC,IAAjCA,EAAgC,EAAhCA,SAAgC,IAAtBC,KAAAA,OAAsB,MAAf,SAAe,EAChD,OACE,mBAAQC,UAAWC,EAASF,KAAMA,EAAlC,SACGD,GAGN,C,uDCPD,MAA0B,yB,UCI1B,EAHgB,SAAC,GAAkB,IAAhBA,EAAe,EAAfA,SACjB,OAAO,oBAASE,UAAWC,EAApB,SAAkCH,GAC1C,C,yFCHD,EAA0B,2BAA1B,EAA6D,yBAA7D,EAA8F,yB,qCCqB9F,EAjBkB,SAAC,GAAuC,IAArCI,EAAoC,EAApCA,MAAOC,EAA6B,EAA7BA,aAAiBC,GAAY,YACjDC,GAAKC,EAAAA,EAAAA,UAAQ,kBCaD,eAACC,EAAD,uDAAQ,GAAR,OAClBC,OAAOC,gBAAgB,IAAIC,WAAWH,IAAOI,QAAO,SAACN,EAAIO,GAWvD,OAREP,IAFFO,GAAQ,IACG,GACHA,EAAKC,SAAS,IACXD,EAAO,IACTA,EAAO,IAAIC,SAAS,IAAIC,cACtBF,EAAO,GACV,IAEA,IAGT,GAAE,GAbe,CDbOG,EAAN,GAAgB,IAEnC,OACE,gBAAKf,UAAWC,EAAhB,UACE,mBAAOe,QAASX,EAAIL,UAAWC,EAA/B,UACGC,GACD,0BACEF,UAAWC,EACXI,GAAIA,EACJY,SAAUd,GACNC,QAKb,C,uDEpBD,MAAwB,qB,UCSxB,EARc,SAAC,GAAkB,IAAhBN,EAAe,EAAfA,SACf,OACE,+BACE,eAAIE,UAAWC,EAAf,SAA2BH,KAGhC,C,wJCHD,EALqB,CACnBoB,KAAM,GACNC,MAAO,GACPC,SAAU,I,UCqBZ,EAxBe,CACbF,KAAM,CACJnB,KAAM,OACNmB,KAAM,OACNG,UAAU,EACVnB,MAAO,YACPoB,YAAa,aAEfH,MAAO,CACLpB,KAAM,QACNmB,KAAM,QACNG,UAAU,EACVnB,MAAO,aACPoB,YAAa,cAEfF,SAAU,CACRrB,KAAM,WACNmB,KAAM,WACNG,UAAU,EACVnB,MAAO,gBACPoB,YAAa,a,UCnBjB,EAAuB,2B,UCkCvB,EA5BqB,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACtB,GAA0BC,EAAAA,EAAAA,WAAS,UAAKC,IAAxC,eAAOC,EAAP,KAAcC,EAAd,KACQT,EAA0BQ,EAA1BR,KAAMC,EAAoBO,EAApBP,MAAOC,EAAaM,EAAbN,SAEfjB,EAAe,SAAC,GAAgB,IAAdyB,EAAa,EAAbA,OACdV,EAAgBU,EAAhBV,KAAMW,EAAUD,EAAVC,MACdF,GAAS,SAAAG,GACP,OAAO,kBAAKA,GAAZ,cAAwBZ,EAAOW,GAChC,GACF,EAMD,OACE,kBAAM7B,UAAWC,EAAUsB,SANR,SAAAQ,GACnBA,EAAEC,iBACFT,EAASG,GACTC,GAAS,UAAKF,GACf,EAEC,WACE,SAACQ,EAAA,GAAD,QAAWJ,MAAOX,EAAMf,aAAcA,GAAkB+B,EAAAA,QACxD,SAACD,EAAA,GAAD,QAAWJ,MAAOV,EAAOhB,aAAcA,GAAkB+B,EAAAA,SACzD,SAACD,EAAA,GAAD,QACEJ,MAAOT,EACPjB,aAAcA,GACV+B,EAAAA,YAEN,SAACC,EAAA,EAAD,yBAGL,ECRD,EAlBqB,WACnB,IAAMC,GAAWC,EAAAA,EAAAA,MAKjB,OACE,2BACE,SAACC,EAAA,EAAD,WACE,iBAAKtC,UAAU,YAAf,WACE,SAACuC,EAAA,EAAD,wBACA,SAAC,EAAD,CAAchB,SATD,SAAAiB,GACnBJ,GAASK,EAAAA,EAAAA,IAAOD,GACjB,UAYF,C","sources":["webpack://react-homework-template/./src/components/Button/Button.module.css?ce6f","components/Button/Button.jsx","webpack://react-homework-template/./src/components/Section/Section.module.css?dbe8","components/Section/Section.jsx","webpack://react-homework-template/./src/components/TextField/TextField.module.css?b6c9","components/TextField/TextField.jsx","../node_modules/nanoid/index.browser.js","webpack://react-homework-template/./src/components/Title/Title.module.css?a947","components/Title/Title.jsx","components/RegisterForm/initialState.js","components/RegisterForm/fields.js","webpack://react-homework-template/./src/components/RegisterForm/RegisterForm.module.css?a5d4","components/RegisterForm/RegisterForm.jsx","pages/RegisterPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"btn\":\"Button_btn__RBtNK\"};","import css from './Button.module.css';\n\nconst Button = ({ children, type = 'submit' }) => {\n  return (\n    <button className={css.btn} type={type}>\n      {children}\n    </button>\n  );\n};\nexport default Button;\n","// extracted by mini-css-extract-plugin\nexport default {\"section\":\"Section_section__Z2PLw\"};","import css from './Section.module.css';\n\nconst Section = ({ children }) => {\n  return <section className={css.section}>{children}</section>;\n};\nexport default Section;\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"TextField_wrapper__650c1\",\"label\":\"TextField_label__vkJH3\",\"field\":\"TextField_field__qmQAN\"};","import { useMemo } from 'react';\nimport { nanoid } from 'nanoid';\n\nimport css from './TextField.module.css';\n\nconst TextField = ({ label, handleChange, ...props }) => {\n  const id = useMemo(() => nanoid(), []);\n\n  return (\n    <div className={css.wrapper}>\n      <label htmlFor={id} className={css.label}>\n        {label}\n        <input\n          className={css.field}\n          id={id}\n          onChange={handleChange}\n          {...props}\n        />\n      </label>\n    </div>\n  );\n};\nexport default TextField;\n","export { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\n","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"Title_title__mrNq5\",\"transform\":\"Title_transform__EfuKo\"};","import css from './Title.module.css';\n\nconst Title = ({ children }) => {\n  return (\n    <>\n      <h1 className={css.title}>{children}</h1>\n    </>\n  );\n};\n\nexport default Title;\n","const initialState = {\n  name: '',\n  email: '',\n  password: '',\n};\nexport default initialState;\n","const fields = {\n  name: {\n    type: 'text',\n    name: 'name',\n    required: true,\n    label: 'User name',\n    placeholder: 'Your name',\n  },\n  email: {\n    type: 'email',\n    name: 'email',\n    required: true,\n    label: 'User email',\n    placeholder: 'Your email',\n  },\n  password: {\n    type: 'password',\n    name: 'password',\n    required: true,\n    label: 'User password',\n    placeholder: 'Password',\n  },\n};\n\nexport default fields;\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"RegisterForm_form__Tv43W\",\"btn\":\"RegisterForm_btn__bgTuW\"};","import { useState } from 'react';\nimport initialState from './initialState';\nimport TextField from 'components/TextField/TextField';\nimport fields from './fields';\nimport Button from 'components/Button/Button';\nimport css from './RegisterForm.module.css';\n\nconst RegisterForm = ({ onSubmit }) => {\n  const [state, setState] = useState({ ...initialState });\n  const { name, email, password } = state;\n\n  const handleChange = ({ target }) => {\n    const { name, value } = target;\n    setState(prevState => {\n      return { ...prevState, [name]: value };\n    });\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    onSubmit(state);\n    setState({ ...initialState });\n  };\n  return (\n    <form className={css.form} onSubmit={handleSubmit}>\n      <TextField value={name} handleChange={handleChange} {...fields.name} />\n      <TextField value={email} handleChange={handleChange} {...fields.email} />\n      <TextField\n        value={password}\n        handleChange={handleChange}\n        {...fields.password}\n      />\n      <Button>Register</Button>\n    </form>\n  );\n};\nexport default RegisterForm;\n","import { useDispatch } from 'react-redux';\n\nimport { signUp } from 'redux/auth/auth-operations';\n\nimport Section from 'components/Section/Section';\nimport Title from 'components/Title/Title';\nimport RegisterForm from 'components/RegisterForm/RegisterForm';\n\nconst RegisterPage = () => {\n  const dispatch = useDispatch();\n  const handleSignUp = data => {\n    dispatch(signUp(data));\n  };\n\n  return (\n    <main>\n      <Section>\n        <div className=\"container\">\n          <Title>Register</Title>\n          <RegisterForm onSubmit={handleSignUp} />\n        </div>\n      </Section>\n    </main>\n  );\n};\n\nexport default RegisterPage;\n"],"names":["children","type","className","css","label","handleChange","props","id","useMemo","size","crypto","getRandomValues","Uint8Array","reduce","byte","toString","toUpperCase","nanoid","htmlFor","onChange","name","email","password","required","placeholder","onSubmit","useState","initialState","state","setState","target","value","prevState","e","preventDefault","TextField","fields","Button","dispatch","useDispatch","Section","Title","data","signUp"],"sourceRoot":""}