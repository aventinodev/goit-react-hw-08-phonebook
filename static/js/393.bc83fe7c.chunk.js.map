{"version":3,"file":"static/js/393.bc83fe7c.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/Section/Section.module.css?dbe8","components/Section/Section.jsx","webpack://react-homework-template/./src/components/Title/Title.module.css?a947","components/Title/Title.jsx","redux/contacts/contacts-selectors.js","webpack://react-homework-template/./src/components/ContactItem/ContactItem.module.css?be2b","components/ContactItem/ContactItem.jsx","webpack://react-homework-template/./src/components/ContactsList/ContactsList.module.css?d8e9","components/ContactsList/ContactsList.jsx","webpack://react-homework-template/./src/components/FormContact/FormContact.module.css?1304","components/FormContact/FormContact.jsx","redux/filter/filter-selectors.js","webpack://react-homework-template/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","pages/ContactsPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"section\":\"Section_section__Z2PLw\"};","import css from './Section.module.css';\n\nconst Section = ({ children }) => {\n  return <section className={css.section}>{children}</section>;\n};\nexport default Section;\n","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"Title_title__mrNq5\",\"transform\":\"Title_transform__EfuKo\"};","import css from './Title.module.css';\n\nconst Title = ({ children }) => {\n  return (\n    <>\n      <h1 className={css.title}>{children}</h1>\n    </>\n  );\n};\n\nexport default Title;\n","export const selectContacts = store => store.contacts.items;\n\nexport const selectIsLoading = store => store.contacts.isLoading;\nexport const selectError = store => store.contacts.error;\nexport const selectOperation = store => store.contacts.operation;\n\nexport const selectFilteredContacts = ({ contacts, filter }) => {\n  if (!filter) {\n    return contacts.items;\n  }\n\n  const normalizedFilter = filter.toLowerCase();\n  const filteredContacts = contacts.items.filter(contact =>\n    contact.name.toLowerCase().includes(normalizedFilter)\n  );\n  return filteredContacts;\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"ContactItem_item__gxreB\",\"btn\":\"ContactItem_btn__1h5dG\",\"notes\":\"ContactItem_notes__VaTmu\"};","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/contacts-operations';\nimport { selectOperation } from 'redux/contacts/contacts-selectors';\nimport { Loader } from 'components/Loader/Loader';\n// import { ClipLoader } from 'react-spinners';\nimport css from './ContactItem.module.css';\n\nconst ContactItem = ({ id, name, number }) => {\n  const dispatch = useDispatch();\n  const operation = useSelector(selectOperation);\n\n  const onDeleteContact = () => {\n    dispatch(deleteContact(id));\n  };\n\n  return (\n    <li className={css.item}>\n      <p className={css.notes}>\n        {name}: {number}\n      </p>\n\n      <button className={css.btn} type=\"button\" onClick={onDeleteContact}>\n        {operation === id ? <Loader size={16} color={'#ffffff'} /> : 'Delete'}\n      </button>\n    </li>\n  );\n};\n\nContactItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n};\n\nexport default ContactItem;\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"ContactsList_list__mmE3Y\",\"notes\":\"ContactsList_notes__MqOFr\"};","import React from 'react';\n\nimport { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { fetchContacts } from 'redux/contacts/contacts-operations';\nimport {\n  selectFilteredContacts,\n  selectError,\n  selectOperation,\n} from 'redux/contacts/contacts-selectors';\n\nimport { Loader } from 'components/Loader/Loader';\nimport ContactItem from 'components/ContactItem/ContactItem';\nimport css from './ContactsList.module.css';\n\nexport const ContactsList = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectFilteredContacts);\n  const operation = useSelector(selectOperation);\n  const error = useSelector(selectError);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      {operation === 'fetch' && !error && <Loader />}\n\n      <ul className={css.list}>\n        {contacts.map(({ id, name, number }) => (\n          <ContactItem key={id} id={id} name={name} number={number} />\n        ))}\n      </ul>\n    </>\n  );\n};\nexport default ContactsList;\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"FormContact_form__Ew1Sg\",\"label\":\"FormContact_label__MImX8\",\"field\":\"FormContact_field__TFP9e\",\"btn\":\"FormContact_btn__YsnpP\"};","import React from 'react';\nimport { useState } from 'react';\nimport { addContact } from 'redux/contacts/contacts-operations';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  selectFilteredContacts,\n  selectOperation,\n} from 'redux/contacts/contacts-selectors';\n\nimport { Loader } from 'components/Loader/Loader';\nimport css from './FormContact.module.css';\n\nconst FormContact = () => {\n  const initialState = {\n    name: '',\n    number: '',\n  };\n  const [state, setState] = useState({ ...initialState });\n  const { name, number } = state;\n\n  const contacts = useSelector(selectFilteredContacts);\n\n  const operation = useSelector(selectOperation);\n  const dispatch = useDispatch();\n\n  const isDublicate = (name, number) => {\n    const normalizedName = name.toLowerCase();\n    const result = contacts.find(contact => {\n      return (\n        contact.name.toLowerCase() === normalizedName ||\n        contact.number === number\n      );\n    });\n    return Boolean(result);\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (isDublicate(name, number)) {\n      alert('Contact with such name or number is already  exist');\n      return false;\n    }\n    dispatch(addContact({ name, number }));\n    setState({ ...initialState });\n  };\n\n  const handleChange = ({ target }) => {\n    const { name, value } = target;\n    setState(prevState => {\n      return { ...prevState, [name]: value };\n    });\n  };\n\n  return (\n    <form className={css.form} onSubmit={handleSubmit}>\n      <label className={css.label}>\n        Name\n        <input\n          className={css.field}\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          onChange={handleChange}\n        />\n      </label>\n      <label className={css.label}>\n        Number\n        <input\n          className={css.field}\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          onChange={handleChange}\n        />\n      </label>\n      <button className={css.btn} type=\"submit\">\n        {operation === 'add' ? (\n          <Loader size={16} color={'#ffffff'} />\n        ) : (\n          'Add contact'\n        )}\n      </button>\n    </form>\n  );\n};\n\nexport default FormContact;\n","export const selectFilter = store => store.filter;\n","// extracted by mini-css-extract-plugin\nexport default {\"label\":\"Filter_label__vEd1E\",\"input\":\"Filter_input__N7T3z\"};","import { useSelector, useDispatch } from 'react-redux';\nimport { useEffect } from 'react';\nimport { selectFilter } from 'redux/filter/filter-selectors';\nimport { setFilter } from 'redux/filter/filter-slice';\nimport { fetchContacts } from 'redux/contacts/contacts-operations';\nimport css from './Filter.module.css';\n\nconst Filter = () => {\n  const filter = useSelector(selectFilter);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const onSetFilter = e => {\n    dispatch(setFilter(e.target.value));\n  };\n  return (\n    <label className={css.label}>\n      Find contacts by name\n      <input\n        className={css.input}\n        type=\"text\"\n        name=\"filter\"\n        value={filter}\n        onChange={onSetFilter}\n      />\n    </label>\n  );\n};\n\nexport default Filter;\n","import Section from 'components/Section/Section';\nimport ContactsList from 'components/ContactsList/ContactsList';\nimport FormContact from 'components/FormContact/FormContact';\nimport Filter from 'components/Filter/Filter';\nimport Title from 'components/Title/Title';\n\nconst ContactsPage = () => {\n  return (\n    <>\n      <main>\n        <Section>\n          <div className=\"container\">\n            <Title>Phonebook</Title>\n            <FormContact />\n            <Title>Contacts</Title>\n            <div className=\"wrapper\">\n              <Filter />\n              <ContactsList />\n            </div>\n          </div>\n        </Section>\n      </main>\n    </>\n  );\n};\n\nexport default ContactsPage;\n"],"names":["children","className","css","selectError","store","contacts","error","selectOperation","operation","selectFilteredContacts","filter","items","normalizedFilter","toLowerCase","contact","name","includes","id","number","dispatch","useDispatch","useSelector","type","onClick","deleteContact","Loader","size","color","useEffect","fetchContacts","map","initialState","useState","state","setState","handleChange","target","value","prevState","onSubmit","e","preventDefault","normalizedName","result","find","Boolean","isDublicate","alert","addContact","pattern","title","required","onChange","selectFilter","setFilter","Section","Title"],"sourceRoot":""}